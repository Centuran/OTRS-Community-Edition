@function msg-icon($type) {
  $icons: (
    "error":   "\0F0CE6",
    "notice":  "\0F11CF",
    "success": "\0F05E1"
  );

  @return map-get($map: $icons, $key: $type);
}

@function msg-color($type) {
  $colors: (
    "error":   #ff5252,
    "notice":  #fb8c00,
    "success": #4caf50
  );

  @return map-get($map: $colors, $key: $type);
}

@mixin msg-icon-before($type) {
  content: msg-icon($type);
  font-family: "Material Design Icons";
  font-size: 120%;
  opacity: 1;
  position: static;
  vertical-align: middle; 
}

@mixin msg-background($type) {
  background-color: msg-color($type);
  border-radius: inherit;
  bottom: 0;
  content: "";
  left: 0;
  opacity: .12;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
}

@mixin msg-box($type) {
  border: thin solid;
  border-radius: 4px;
  caret-color:rgb(251, 140, 0);
  color: msg-color($type);
}

body {
  /* font-family: Roboto, sans-serif; */
  font-family: Heebo, sans-serif;
  font-size: 100%;
}

select {
  // This overrides Vuetify's "-*-appearance: none" which caused a page freeze
  // in both Chrome and Firefox. Probably related to a similar problem
  // with "div.InputField_Selection div.Text" and its padding.
  -moz-appearance: auto;
  -webkit-appearance: auto;
}

.v-application {
  font-family: inherit;
}

#Header {
  background: #04050e;
  box-sizing: content-box;
  height: 86px;
}

#ToolBar {
  padding-left: 0;

  li.UserAvatar div {
    border-radius: 4px;
  }
}

#NavigationContainer {
  top: 69px;
}

#Navigation {
  box-sizing: content-box;
  font-family: Roboto, sans-serif;
  padding-left: 0;

  & > li > a {
    font-size: 14px;
    padding: 8px 14px 4px 14px;  

    &::after {
      background-color: #f15a22;
    }
  }

  ul {
    padding-left: 0;
  }

  li {
    &::before {
      background-color: #fff;
      border-radius: inherit;
      bottom: 0;
      color: inherit;
      content: "";
      left: 0;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      right: 0;
      top: 0;
      transition: opacity .2s cubic-bezier(.4,0,.6,1);
    }

    &.Selected::before {
      opacity: 0.18;
    }
  }

  & > .Active > ul > li {
    &:hover {
      background-color: #f15a22;
      
      & > a {
        color: #000;
      }
    }

    & > a {
      font-size: 120%;
      padding: 10px 14px;
    }
  }
}

ul.BreadCrumb {
  background: #eee;
  border-radius: 4px;
  box-shadow: none;
  padding-bottom: 0.35em;
  padding-left: 0;
  padding-top: 0.35em;
}

ul.BreadCrumb li:before, ul.BreadCrumb li:after {
  margin-top: -22px;
}

ul.BreadCrumb li::before {
  border-left-color: #eee;
}

ul.BreadCrumb li > a, .BreadCrumb li > span {
  color: #333;
  line-height: normal;
  padding: 0 2px;
}

.MessageBox {
  background: none;
  margin-top: 10px;
}

.MessageBox.Error {
  background: none;
}

.MessageBox p {
  border: thin solid;
  border-radius: 4px;
  border-width: 1px 1px 1px 8px;
  caret-color:rgb(251, 140, 0);
  color: #fb8c00;
  margin-bottom: 0;
  margin-left: 10px;
  margin-right: 10px;
}

.MessageBox p a {
  color: #333;
}

.MessageBox p::before {
  background-color: #fb8c00;
  border-radius: inherit;
  bottom: 0;
  content: "";
  left: 0;
  opacity: .12;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  margin: inherit;
}

.MessageBox.Error p {
  color: #ff5252;
}

.MessageBox.Error p::before {
  background: #ff5252;
}

.MessageBox.Error .Icon::before {
  @include msg-icon-before("error");
}

.MessageBox.Error p a {
  color: #333;
}

.MessageBox.Notice .Icon::before {
  @include msg-icon-before("notice");
}


.WidgetSimple {
  background: #eee;
  border-radius: 4px;
  box-shadow: none;
  margin-right: 0;
}

.WidgetSimple .Header {
  line-height: 1;
  padding: 10px;
}

.WidgetSimple > .Header h2,
.WidgetSimple > .Header h3 {
  color: #333;
  font-size: inherit;
  font-weight: bolder;
  text-shadow: none;
}

.WidgetSimple .Content {
  color: #333;
  padding: 10px;

  ul.ActionList {
    padding-left: 0;
  }
}

button.CallForAction {
  background-color: #f15a22;
  border: none;
  border-radius: 4px;
  font-family: inherit;
  font-size: inherit;
  padding: 12px 32px;
  position: relative;

  i.fa {
    display: none;
  }

  span {
    border: none;
    color: #fff;
    font-size: inherit;
    text-shadow: none;
  }

  &.Fullsize span {
    padding: 0;
  }

  &::before {
    background-color: #f15a22;
    border-radius: inherit;
    bottom: 0;
    color: inherit;
    content: "";
    left: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    transition: opacity .2s cubic-bezier(.4,0,.6,1);
  }

  &::before {
    content: none;
  }

  &:hover {
    background-color: #f15a22;

    &::before {
      opacity: .08;
    }
  }

  &:focus {
    background-color: #f15a22;
    outline: none;
  }

  &:active {
    background-color: #f15a22;

    &::before {
      opacity: .08;
    }
  }

  &.Inline {
    height: 32px;
    padding: 0 32px;
    top: 1px;
    vertical-align: middle;

    span {
      line-height: inherit;
    }
  }

  span.v-ripple__container {
    color: inherit;
    position: absolute;

    span.v-ripple__animation {
      color: inherit;
      position: absolute;
    }
  }
}

form {
  label.Mandatory span.Marker {
    top: initial;
  }
}

// TODO: Cn was supposed to be a prefix (for "Centuran"), probably better
// to use lowercase classes and "cmt" as a prefix for "Comet"
.FormScreen .Cn-FormWrapper {
  margin-left: calc(270px + 16px);
}

input[type="text"] {
  border: solid 1px rgba(0,0,0,.38);
  border-radius: 4px;
  box-shadow: none;
  color: rgba(0,0,0,.87);
  height: 32px;
  font-family: inherit;
  font-size: inherit;
  padding: 5px;
}

.SearchBox input[type="text"] {
  border-right: solid 1px rgba(0,0,0,.38);
  box-sizing: border-box;
  font-family: Heebo, sans-serif;
  font-size: inherit;
  height: auto;
  height: 32px;
  padding: 0 12px;
  width: 100%;
}

.SearchBox button[type="submit"] {
  background: none;
  border: none;
  font: inherit;
  height: 32px;
  position: absolute;
  right: 0;
  top: 0;
  width: 32px;
}

.SidebarColumn .WidgetSimple .InputField_Container,
.SidebarColumn .WidgetSimple .InputField_InputContainer,
.SidebarColumn .WidgetSimple .InputField_Search {
  width: 100% !important;
}

.SidebarColumn .WidgetSimple .InputField_Search {
  box-sizing: border-box;
}

div.InputField_Selection {
  height: 32px;
  line-height: 32px;
  top: 0;
}

div.InputField_Selection div.Text {
  background: #e0e0e0;
  border-radius: 100000px;
  color: rgba(0,0,0,.87);
  font-size: 14px;
  height: 22px;
  line-height: 24px;
  line-height: initial;

  // FIXME: For whatever reason, this causes Chrome to freeze when e.g. widget
  // settings are expanded for "Reminder Tickets" on the Dashboard. This affects
  // the "shown" select box displayed in the settings, probably by interfering
  // with modernize somehow. I tried setting "padding-left/right" separately,
  // setting position/display, using border as padding, etc. to no effect.
  // Happened on both Chrome and Chromium, Firefox is fine.
  //
  // padding: 0 10px;
 
  // text-indent: 6px; // Tried this as a workaround -- same problem

  // &::before, &::after { // This didn't help either
  //   content: "";
  //   width: 6px;
  //   display: inline-block;
  // }

  // Semi-acceptable workaround
  width: 108%;
  text-align: center;
}

.DataTable {
  border-radius: 4px;
  border-spacing: 0;
}

.DataTable thead {
  background: none;
}

.DataTable thead th {
  background: none;
  border: none;
  border-bottom: thin solid rgba(0,0,0,.12);
  font-size: inherit;
  font-weight: 500;
  text-transform: none;
  padding: 10px 10px;
}

.DataTable p.TableEmpty {
  color: #666;
  padding: 2.6em 0;
  text-align: center;
}

#Footer a {
  display: initial;
}

#Footer img {
  display: inline-block;
  filter: grayscale(1);
  margin: auto;
  margin-top: 1.4em;
  opacity: 0.5;
  width: 110px;
}

#Footer a:hover img {
  filter: none;
  opacity: 0.8;
}

/* Login */

@mixin error-msg-icon {
  content: "\0F0CE6";
  font-family: "Material Design Icons";
  font-size: 120%;
  margin: 0;
  opacity: 1;
  position: static;
  vertical-align: middle; 
}

.LoginScreen {
  height: 100vh;
  padding-top: 0;

  #AppWrapper {
    border-top: solid 80px #000;
    display: flex;
    flex-direction: column;
    height: calc(100vh - 80px - 40px);
    padding-top: 40px;
  }

  #LoginLogo {
    margin-bottom: 40px;
  }

  #Footer {
    background-color: #000;
    margin-top: auto;

    a {
      color: #999;
      text-shadow: none;
    }

    img {
      display: inline-block;
      filter: grayscale(1) invert(100%);
      margin: auto;
      margin-top: 1.4em;
      opacity: 0.5;
      width: 110px;
    }
    
    a:hover img {
      filter: none;
      opacity: 0.8;
    }    
  }
}

.LoginScreen #LoginBox {
  fieldset div {
    input {
      border: solid 1px rgba(0,0,0,.38);
      border-radius: 4px;
      box-shadow: none;
      box-sizing: border-box;
      color: rgba(0,0,0,.87);
      font-family: Heebo, sans-serif;
      font-size: inherit;
      height: 42px;
      margin-top: 15px;
      padding: 0 12px;
      width: 100%;
    }

    &:first-child input {
      margin-top: 0;
    }
  }

  .TooltipErrorMessage {
    margin-bottom: 15px;
  }

  button[type="submit"] {
    margin-top: 25px;
  }
}

.LoginScreen {
  .SuccessBox,
  .ErrorBox {
    background: none;
    margin-bottom: 1em;
    position: relative;

    span {
      display: flex;

      &::before {
        margin-right: 0.2em;  
      }
    }
  }

  .SuccessBox {
    @include msg-box("success");

    &::before {
      @include msg-background("success");
    }

    span::before {
      @include msg-icon-before("success");
    }
  }

  .ErrorBox {
    @include msg-box("error");

    &::before {
      @include msg-background("error");
    }

    span::before {
      @include msg-icon-before("error");
    }
  }
}

/* Dashboard */

fieldset.TableLike.FixedLabelSmall > label {
  width: 10em;
}

fieldset.TableLike.FixedLabelSmall > .Field,
fieldset.TableLike.FixedLabelSmall > .Row > .Field,
fieldset.TableLike.FixedLabelSmall > .Value,
fieldset.TableLike.FixedLabelSmall > .Row > .Value {
  margin-left: 10em;
}

fieldset.TableLike > label,
fieldset.TableLike > .Row > label {
  color: #666;
}

ul.Tablelike li.Header {
  text-transform: none;
}

div.AllocationListContainer {
  margin-left: calc(10em + 10px);
  padding: 10px;

  div.Size1of2 {
    position: relative;

    ul.Tablelike {
      border: none;

      li.Header {
        background: transparent;
        border: none;
        border-bottom: solid 1px #bbb;
        font-size: inherit;
        line-height: 1.9em;
        margin-bottom: 10px;
        padding-bottom: 0.3em;
        padding-top: calc(0.3em - 10px);
      }
    }

    div.FilterInputContainer {
      background: none;
      border: none;
      position: absolute;
      right: 0;
      top: 0;
      width: 50%;

      input {
        margin: 0;
      }
    }

    ul.AllocationList {
      background: #fff;
      border: solid 1px #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      height: 155px;
      max-height: 155px;
      min-height: 155px;
      padding: 4px;

      li {
        background: #eee;
        border-radius: 4px;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
        color: #555;
        font-size: 90%;
        margin-bottom: 4px;
        padding-left: 10px;

        &.ui-sortable-helper {
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25),
            3px 3px 1px rgba(0, 0, 0, 0.15);
        }
      }
    }
  }
}

.WidgetSimple .Buttons {
  font-size: inherit;

  button {
    padding: 6px 16px;
  }
}

.DataTable,
.TableSmall {
  border-radius: 4px;
  border-spacing: 0;
  font-size: inherit;

  thead tr {
    background: none;
  }

  thead th {
    background: none;
    border: none;
    border-bottom: thin solid rgba(0, 0, 0, .12);
    font-size: inherit;
    font-weight: 500;
    font-weight: bolder;
    padding: 10px 10px;
    text-transform: none;
      
    &.DashboardHeader,
    &.DashboardHeader.SortAscendingLarge,
    &.DashboardHeader.SortDescendingLarge,
    &.OverviewHeader,
    &.OverviewHeader.SortAscendingLarge,
    &.OverviewHeader.SortDescendingLarge {
      padding: 10px 20px 10px 1px;
      padding-left: 1px;
    }

    & a,
    & span {
      font-size: inherit;
      font-weight: inherit;
      padding-left: 0;
      text-transform: none;
    }

    a.ColumnSettingsTrigger::after,
    &.SortAscendingLarge a::after,
    &.SortDescendingLarge a::after {
      background: #ddd;
      border-radius: 50%;  
      display: inline-block;
      font-family: "Material Design Icons";
      font-size: 110%;
      height: 1.5em;
      left: initial;
      line-height: 150%;
      margin-left: 0.4em;
      position: static;
      text-align: center;
      text-shadow: none;
      vertical-align: middle;
      width: 1.5em;
    }

    &.DashboardHeader a.ColumnSettingsTrigger,
    &.OverviewHeader a.ColumnSettingsTrigger {
      display: initial;
      float: none;
      font-size: 100%;
      height: 0;
      margin-left: 0.4em;
      opacity: 1;
      position: static;
      width: 0;

      &::after {
        content: "\0F0232";
        margin-left: 0;
      }
      
      i.fa {
        display: none;
      }
    }

    &.SortAscendingLarge a:not(.ColumnSettingsTrigger)::after {
      content: "\0F0143";
    }

    &.SortDescendingLarge a:not(.ColumnSettingsTrigger)::after {
      content: "\0F0140";
    }


    &.SortAscendingLarge a,
    &.SortDescendingLarge a {
      &:not(.ColumnSettingsTrigger)::after {
        position: static;
        text-shadow: none;
      }

      &.ColumnSettingsTrigger::after {
        content: "\0F0232";
      }
    }

    a {
      font-size: inherit;
    }

    // First element with column name
    // (FIXME: This probably only works in the dashboard at this moment, since
    // the order of elements has been changed accordingly in AgentDashboardTicketGeneric.tt)
    &.DashboardHeader > a,
    &.DashboardHeader > span,
    &.OverviewHeader > a,
    &.OverviewHeader > span {
      float: left;
      height: initial;
      line-height: 150%;
    }
  }

  tbody td {
    padding: 6px 10px;
  }
}

.Tab.Actions {
  border: solid 1px #ccc;
  border-radius: 4px;
  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);
  margin-bottom: 8px;
  padding-left: 0;

  li {
    border-left: solid 1px #ccc;
    float: left;
    font-size: smaller;

    &:first-child {
      border-left: none;

      a {
        padding-left: 10px;
      }
    }

    a {
      border-bottom: none;
      color: #777;
      padding: 5px 10px;
      vertical-align: middle;
    }

    &.Selected a {
      background-color: #fff;
    }

    &:after {
      content: none;
    }
  }
}

.SettingsWidget ul {
  padding-left: 0;

  input[type="checkbox"] {
    display: none;
  }
}

/* New Ticket */

.CustomerContainer {
  box-shadow: none;
  border-radius: 4px;

  .CustomerTicketText {
    border: none;
    font-size: 85%;
    padding-left: 10px;

    &.MainCustomer {
      background-color: #b3e5fc;
      border: none;
    }
  }
}

.Field.cmt-otrs-datetime-hidden {
  &::first-line {
    font-size: 0;
  }

  select[name$="Day"], select[name$="Month"], select[name$="Year"],
  div.TooltipErrorMessage,
  a.DatepickerIcon,
  select[name$="Hour"], select[name$="Minute"] {
    display: none;
  }
}
